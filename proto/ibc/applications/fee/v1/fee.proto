syntax = "proto3";

package ibc.applications.fee.v1;
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "ibc/core/channel/v1/channel.proto";
option go_package = "github.com/cosmos/ibc-go/modules/apps/29-fee/types";

// Fee interface
// See Fee Payment Middleware spec:
// https://github.com/cosmos/ibc/tree/master/spec/app/ics-029-fee-payment#fee-middleware-contract
message Fee {
  repeated cosmos.base.v1beta1.Coin receive_fee = 1 [
    (gogoproto.moretags)     = "yaml:\"receive_fee\"",
    (gogoproto.nullable)     = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
  repeated cosmos.base.v1beta1.Coin ack_fee = 2 [
    (gogoproto.moretags)     = "yaml:\"ack_fee\"",
    (gogoproto.nullable)     = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
  repeated cosmos.base.v1beta1.Coin timeout_fee = 3 [
    (gogoproto.moretags)     = "yaml:\"timeout_fee\"",
    (gogoproto.nullable)     = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}
// Fee associated with a packet_id
message IdentifiedPacketFee {
  ibc.core.channel.v1.PacketId packet_id  = 1 [(gogoproto.moretags) = "yaml:\"packet_id\""];
  Fee                          fee        = 2 [(gogoproto.nullable) = false];
  string                       refund_acc = 3 [(gogoproto.moretags) = "yaml:\"refund_acc\""];
  repeated string              relayers   = 4;
}
