syntax = "proto3";

package ibc.applications.interchain_accounts.host.v1;

option go_package = "github.com/cosmos/ibc-go/v3/modules/apps/27-interchain-accounts/host/types";

import "google/api/annotations.proto";
import "ibc/applications/interchain_accounts/host/v1/host.proto";
import "tendermint/abci/types.proto";

// Query provides defines the gRPC querier service.
service Query {
  // Params queries all parameters of the ICA host submodule.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/ibc/apps/interchain_accounts/host/v1/params";
  }

  // PacketEvents queries the events of an ICA packet
  rpc PacketEvents(QueryPacketEventsRequest) returns (QueryPacketEventsResponse) {
    option (google.api.http).get = "/ibc/apps/interchain_accounts/host/v1/packet_events";
  }
}

// QueryParamsRequest is the request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params defines the parameters of the module.
  Params params = 1;
}

// QueryPacketEventsRequest is the request type for the Query/PacketEvents RPC method.
message QueryPacketEventsRequest {
  // channel_id of the interchain accounts channel
  string channel_id = 1;
  // sequence number of the packet
  uint64 sequence = 2;
}

// QueryPacketEventsResponse is the response type for the Query/PacketEvents RPC method.
message QueryPacketEventsResponse {
  repeated tendermint.abci.Event events = 1;
}
