syntax = "proto3";

package ibc.applications.interchain_accounts.controller.v1;

option go_package = "github.com/cosmos/ibc-go/v5/modules/apps/27-interchain-accounts/controller/types";

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";

// Msg defines the 27-interchain-accounts/controller Msg service.
service Msg {
  // RegisterAccount defines a rpc handler for MsgRegisterAccount.
  rpc RegisterAccount(MsgRegisterAccount) returns (MsgRegisterAccountResponse);
  // SubmitTx defines a rpc handler for MsgSubmitTx.
  rpc SubmitTx(MsgSubmitTx) returns (MsgSubmitTxResponse);
}

// MsgRegisterAccount defines the payload for Msg/RegisterAccount
message MsgRegisterAccount {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string connection_id = 1 [(gogoproto.moretags) = "yaml:\"connection_id\""];
  string owner         = 2;
  string version       = 3;
}

// MsgRegisterAccountResponse defines the response for Msg/RegisterAccount
message MsgRegisterAccountResponse {
  string channel_id = 1 [(gogoproto.moretags) = "yaml:\"channel_id\""];
}

// MsgSubmitTx defines the payload for MsgSubmitTx
message MsgSubmitTx {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string   owner                   = 1;
  string   connection_id           = 2 [(gogoproto.moretags) = "yaml:\"connection_id\""];
  string   timeout                 = 3;
  repeated google.protobuf.Any msg = 4;
}

// MsgSubmitTxResponse defines the response for MsgSubmitTx
message MsgSubmitTxResponse {}