// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ibc/applications/interchain_accounts/v1/sdk.proto

package types

import (
	fmt "fmt"
	types1 "github.com/cosmos/cosmos-sdk/codec/types"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// TxMsgData defines a list of MsgData. A transaction will have a MsgData object
// for each message.
type TxMsgData struct {
	// data field is deprecated and not populated.
	Data []*types.MsgData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"` // Deprecated: Do not use.
	// msg_responses contains the Msg handler responses packed into Anys.
	//
	// Since: cosmos-sdk 0.45
	MsgResponses []*types1.Any `protobuf:"bytes,2,rep,name=msg_responses,json=msgResponses,proto3" json:"msg_responses,omitempty"`
}

func (m *TxMsgData) Reset()         { *m = TxMsgData{} }
func (m *TxMsgData) String() string { return proto.CompactTextString(m) }
func (*TxMsgData) ProtoMessage()    {}
func (*TxMsgData) Descriptor() ([]byte, []int) {
	return fileDescriptor_29fd64a97a4915c4, []int{0}
}
func (m *TxMsgData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TxMsgData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TxMsgData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TxMsgData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxMsgData.Merge(m, src)
}
func (m *TxMsgData) XXX_Size() int {
	return m.Size()
}
func (m *TxMsgData) XXX_DiscardUnknown() {
	xxx_messageInfo_TxMsgData.DiscardUnknown(m)
}

var xxx_messageInfo_TxMsgData proto.InternalMessageInfo

// Deprecated: Do not use.
func (m *TxMsgData) GetData() []*types.MsgData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *TxMsgData) GetMsgResponses() []*types1.Any {
	if m != nil {
		return m.MsgResponses
	}
	return nil
}

func init() {
	proto.RegisterType((*TxMsgData)(nil), "ibc.applications.interchain_accounts.v1.TxMsgData")
}

func init() {
	proto.RegisterFile("ibc/applications/interchain_accounts/v1/sdk.proto", fileDescriptor_29fd64a97a4915c4)
}

var fileDescriptor_29fd64a97a4915c4 = []byte{
	// 317 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x3f, 0x4f, 0x32, 0x41,
	0x10, 0xc6, 0x59, 0x5e, 0xf2, 0x26, 0x9e, 0xda, 0x10, 0x0a, 0xa4, 0x38, 0xff, 0x15, 0xda, 0xb0,
	0x93, 0x83, 0xc2, 0x60, 0x27, 0xd1, 0xd2, 0x86, 0x58, 0xd9, 0x90, 0xdd, 0x65, 0x5d, 0x36, 0x72,
	0x3b, 0x17, 0x66, 0xef, 0x22, 0x9f, 0xc0, 0xd6, 0xd2, 0xd2, 0x8f, 0x63, 0x49, 0x69, 0x69, 0xe0,
	0x8b, 0x18, 0xf6, 0x0e, 0xb5, 0xb0, 0x9b, 0xdd, 0xcc, 0xef, 0x97, 0x67, 0x9e, 0x28, 0xb1, 0x52,
	0x81, 0xc8, 0xb2, 0x99, 0x55, 0xc2, 0x5b, 0x74, 0x04, 0xd6, 0x79, 0x3d, 0x57, 0x53, 0x61, 0xdd,
	0x58, 0x28, 0x85, 0xb9, 0xf3, 0x04, 0x45, 0x02, 0x34, 0x79, 0xe4, 0xd9, 0x1c, 0x3d, 0x36, 0xcf,
	0xac, 0x54, 0xfc, 0x37, 0xc2, 0xff, 0x40, 0x78, 0x91, 0x74, 0x0e, 0x0c, 0xa2, 0x99, 0x69, 0x08,
	0x98, 0xcc, 0x1f, 0x40, 0xb8, 0x45, 0xe9, 0xe8, 0xb4, 0x0c, 0x1a, 0x0c, 0x23, 0x6c, 0xa6, 0xea,
	0xf7, 0x54, 0x21, 0xa5, 0x48, 0x20, 0x05, 0x69, 0x10, 0x52, 0x59, 0x28, 0x12, 0xa9, 0xbd, 0x48,
	0xc2, 0xa3, 0x5c, 0x3a, 0x79, 0x66, 0xd1, 0xce, 0xdd, 0xd3, 0x2d, 0x99, 0x6b, 0xe1, 0x45, 0x73,
	0x10, 0x35, 0x26, 0xc2, 0x8b, 0x36, 0x3b, 0xfa, 0x77, 0xbe, 0xdb, 0x3b, 0xe6, 0xa5, 0x81, 0x6f,
	0x0c, 0x3c, 0x40, 0x95, 0x81, 0x57, 0xc0, 0xb0, 0xde, 0x66, 0xa3, 0x80, 0x34, 0x07, 0xd1, 0x7e,
	0x4a, 0x66, 0x3c, 0xd7, 0x94, 0xa1, 0x23, 0x4d, 0xed, 0x7a, 0x70, 0xb4, 0x78, 0x19, 0x9b, 0x6f,
	0x63, 0xf3, 0x2b, 0xb7, 0x18, 0xed, 0xa5, 0x64, 0x46, 0xdb, 0xcd, 0xcb, 0xc6, 0xeb, 0xdb, 0x21,
	0x1b, 0x8e, 0xdf, 0x57, 0x31, 0x5b, 0xae, 0x62, 0xf6, 0xb9, 0x8a, 0xd9, 0xcb, 0x3a, 0xae, 0x2d,
	0xd7, 0x71, 0xed, 0x63, 0x1d, 0xd7, 0xee, 0x6f, 0x8c, 0xf5, 0xd3, 0x5c, 0x72, 0x85, 0x29, 0x54,
	0x37, 0x59, 0xa9, 0xba, 0x06, 0xa1, 0xe8, 0x43, 0x8a, 0x93, 0x7c, 0xa6, 0x69, 0xd3, 0x3a, 0x41,
	0xef, 0xa2, 0xfb, 0xd3, 0x5e, 0xf7, 0xbb, 0x70, 0xbf, 0xc8, 0x34, 0xc9, 0xff, 0x21, 0x42, 0xff,
	0x2b, 0x00, 0x00, 0xff, 0xff, 0xe3, 0xfa, 0x9c, 0x32, 0xa5, 0x01, 0x00, 0x00,
}

func (m *TxMsgData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TxMsgData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TxMsgData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.MsgResponses) > 0 {
		for iNdEx := len(m.MsgResponses) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.MsgResponses[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSdk(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Data) > 0 {
		for iNdEx := len(m.Data) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Data[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSdk(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintSdk(dAtA []byte, offset int, v uint64) int {
	offset -= sovSdk(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *TxMsgData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Data) > 0 {
		for _, e := range m.Data {
			l = e.Size()
			n += 1 + l + sovSdk(uint64(l))
		}
	}
	if len(m.MsgResponses) > 0 {
		for _, e := range m.MsgResponses {
			l = e.Size()
			n += 1 + l + sovSdk(uint64(l))
		}
	}
	return n
}

func sovSdk(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozSdk(x uint64) (n int) {
	return sovSdk(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *TxMsgData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSdk
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TxMsgData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TxMsgData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSdk
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSdk
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSdk
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data, &types.MsgData{})
			if err := m.Data[len(m.Data)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgResponses", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSdk
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSdk
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSdk
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MsgResponses = append(m.MsgResponses, &types1.Any{})
			if err := m.MsgResponses[len(m.MsgResponses)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSdk(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSdk
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipSdk(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowSdk
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSdk
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSdk
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthSdk
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupSdk
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthSdk
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthSdk        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowSdk          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupSdk = fmt.Errorf("proto: unexpected end of group")
)
