// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ibc/lightclients/celestia/v1/celestia.proto

package celestia

import (
	fmt "fmt"
	github_com_cometbft_cometbft_libs_bytes "github.com/cometbft/cometbft/libs/bytes"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	github_com_cosmos_gogoproto_types "github.com/cosmos/gogoproto/types"
	types "github.com/cosmos/ibc-go/v8/modules/core/23-commitment/types"
	_07_tendermint "github.com/cosmos/ibc-go/v8/modules/light-clients/07-tendermint"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// ClientState from Tendermint tracks the current validator set, latest height,
// and a possible frozen height.
type ClientState struct {
	BaseClient *_07_tendermint.ClientState `protobuf:"bytes,1,opt,name=base_client,json=baseClient,proto3" json:"base_client,omitempty"`
}

func (m *ClientState) Reset()         { *m = ClientState{} }
func (m *ClientState) String() string { return proto.CompactTextString(m) }
func (*ClientState) ProtoMessage()    {}
func (*ClientState) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a7b0753ec3219d3, []int{0}
}
func (m *ClientState) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ClientState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ClientState.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ClientState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientState.Merge(m, src)
}
func (m *ClientState) XXX_Size() int {
	return m.Size()
}
func (m *ClientState) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientState.DiscardUnknown(m)
}

var xxx_messageInfo_ClientState proto.InternalMessageInfo

// ConsensusState defines the consensus state from Tendermint.
type ConsensusState struct {
	// timestamp that corresponds to the block height in which the ConsensusState
	// was stored.
	Timestamp time.Time `protobuf:"bytes,1,opt,name=timestamp,proto3,stdtime" json:"timestamp"`
	// commitment root (i.e data availability root)
	Root               types.MerkleRoot                                 `protobuf:"bytes,2,opt,name=root,proto3" json:"root"`
	NextValidatorsHash github_com_cometbft_cometbft_libs_bytes.HexBytes `protobuf:"bytes,3,opt,name=next_validators_hash,json=nextValidatorsHash,proto3,casttype=github.com/cometbft/cometbft/libs/bytes.HexBytes" json:"next_validators_hash,omitempty"`
}

func (m *ConsensusState) Reset()         { *m = ConsensusState{} }
func (m *ConsensusState) String() string { return proto.CompactTextString(m) }
func (*ConsensusState) ProtoMessage()    {}
func (*ConsensusState) Descriptor() ([]byte, []int) {
	return fileDescriptor_1a7b0753ec3219d3, []int{1}
}
func (m *ConsensusState) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ConsensusState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ConsensusState.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ConsensusState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsensusState.Merge(m, src)
}
func (m *ConsensusState) XXX_Size() int {
	return m.Size()
}
func (m *ConsensusState) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsensusState.DiscardUnknown(m)
}

var xxx_messageInfo_ConsensusState proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ClientState)(nil), "ibc.lightclients.celestia.v1.ClientState")
	proto.RegisterType((*ConsensusState)(nil), "ibc.lightclients.celestia.v1.ConsensusState")
}

func init() {
	proto.RegisterFile("ibc/lightclients/celestia/v1/celestia.proto", fileDescriptor_1a7b0753ec3219d3)
}

var fileDescriptor_1a7b0753ec3219d3 = []byte{
	// 430 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x52, 0x3f, 0x6f, 0xd3, 0x40,
	0x14, 0xb7, 0x4b, 0x84, 0xc0, 0x41, 0x0c, 0x56, 0x87, 0x28, 0x42, 0x76, 0x95, 0x85, 0x4a, 0x55,
	0xee, 0x1a, 0x40, 0x02, 0x01, 0x93, 0x2b, 0xa1, 0x0e, 0xb0, 0x18, 0xc4, 0xc0, 0x12, 0xee, 0x9c,
	0x17, 0xfb, 0x84, 0xed, 0x57, 0xf9, 0x5e, 0xac, 0xb2, 0x31, 0x32, 0xf6, 0x23, 0xf0, 0x71, 0x3a,
	0x76, 0x64, 0x2a, 0x28, 0xf9, 0x16, 0x4c, 0xe8, 0x7c, 0xb1, 0xe3, 0x2a, 0xdb, 0xef, 0x4e, 0xbf,
	0x3f, 0xf7, 0x7e, 0xef, 0xbc, 0x13, 0x25, 0x13, 0x9e, 0xab, 0x34, 0xa3, 0x24, 0x57, 0x50, 0x92,
	0xe6, 0x09, 0xe4, 0xa0, 0x49, 0x09, 0x5e, 0xcf, 0x3a, 0xcc, 0x2e, 0x2a, 0x24, 0xf4, 0x9f, 0x28,
	0x99, 0xb0, 0x3e, 0x99, 0x75, 0x84, 0x7a, 0x36, 0x0e, 0x53, 0xc4, 0x34, 0x07, 0xde, 0x70, 0xe5,
	0x6a, 0xc9, 0x49, 0x15, 0xa0, 0x49, 0x14, 0x17, 0x56, 0x3e, 0x7e, 0x6a, 0xb2, 0x12, 0xac, 0x80,
	0x27, 0x58, 0x14, 0x8a, 0x0a, 0x28, 0xa9, 0x49, 0xe9, 0x4e, 0x5b, 0x22, 0xdf, 0x7b, 0x14, 0x41,
	0xb9, 0x80, 0xaa, 0x50, 0x56, 0xb0, 0x3b, 0x6d, 0x05, 0x87, 0x29, 0xa6, 0xd8, 0x40, 0x6e, 0x90,
	0xbd, 0x9d, 0x08, 0x6f, 0x78, 0xd6, 0xe8, 0x3f, 0x92, 0x20, 0xf0, 0xdf, 0x7b, 0x43, 0x29, 0x34,
	0xcc, 0xad, 0xe7, 0xc8, 0x3d, 0x72, 0x8f, 0x87, 0xcf, 0x4e, 0xd8, 0xde, 0x4c, 0x3d, 0xf7, 0x7a,
	0xc6, 0x7a, 0x0e, 0xb1, 0x67, 0xf4, 0xf6, 0xe2, 0xf5, 0xe0, 0xe7, 0xaf, 0xd0, 0x99, 0xfc, 0x38,
	0xf0, 0x1e, 0x9f, 0x61, 0xa9, 0xa1, 0xd4, 0x2b, 0x6d, 0x63, 0x22, 0xef, 0x61, 0x37, 0xf8, 0x36,
	0x64, 0xcc, 0x6c, 0x35, 0xac, 0xad, 0x86, 0x7d, 0x6a, 0x19, 0xd1, 0x83, 0xeb, 0xdb, 0xd0, 0xb9,
	0xfa, 0x13, 0xba, 0xf1, 0x4e, 0xe6, 0xbf, 0xf5, 0x06, 0x15, 0x22, 0x8d, 0x0e, 0x1a, 0xf9, 0xa4,
	0x79, 0xa3, 0x29, 0x8e, 0xf5, 0xaa, 0xaa, 0x67, 0xec, 0x03, 0x54, 0xdf, 0x72, 0x88, 0x11, 0x29,
	0x1a, 0x18, 0x9b, 0xb8, 0x51, 0xf9, 0x4b, 0xef, 0xb0, 0x84, 0x4b, 0x9a, 0xd7, 0x22, 0x57, 0x0b,
	0x41, 0x58, 0xe9, 0x79, 0x26, 0x74, 0x36, 0xba, 0x77, 0xe4, 0x1e, 0x3f, 0x8a, 0x5e, 0xfc, 0xbb,
	0x0d, 0x4f, 0x53, 0x45, 0xd9, 0x4a, 0x1a, 0x3b, 0xd3, 0x3e, 0x90, 0x5c, 0xd2, 0x0e, 0xe4, 0x4a,
	0x6a, 0x2e, 0xbf, 0x13, 0x68, 0x76, 0x0e, 0x97, 0x91, 0x01, 0xb1, 0x6f, 0x1c, 0x3f, 0x77, 0x86,
	0xe7, 0x42, 0x67, 0xb6, 0x82, 0xe8, 0xeb, 0xf5, 0x3a, 0x70, 0x6f, 0xd6, 0x81, 0xfb, 0x77, 0x1d,
	0xb8, 0x57, 0x9b, 0xc0, 0xb9, 0xd9, 0x04, 0xce, 0xef, 0x4d, 0xe0, 0x7c, 0x79, 0x77, 0x27, 0x45,
	0x17, 0xa8, 0xcd, 0x62, 0xa7, 0x29, 0xf2, 0xfa, 0x15, 0x2f, 0x70, 0xb1, 0xca, 0x41, 0xdb, 0x35,
	0x4f, 0xdb, 0x3d, 0x9f, 0xbe, 0x9c, 0xb6, 0x5f, 0xea, 0x4d, 0x0b, 0xe4, 0xfd, 0xa6, 0xb6, 0xe7,
	0xff, 0x03, 0x00, 0x00, 0xff, 0xff, 0xd6, 0xf5, 0x63, 0xc6, 0xac, 0x02, 0x00, 0x00,
}

func (m *ClientState) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ClientState) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClientState) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.BaseClient != nil {
		{
			size, err := m.BaseClient.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintCelestia(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ConsensusState) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ConsensusState) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConsensusState) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.NextValidatorsHash) > 0 {
		i -= len(m.NextValidatorsHash)
		copy(dAtA[i:], m.NextValidatorsHash)
		i = encodeVarintCelestia(dAtA, i, uint64(len(m.NextValidatorsHash)))
		i--
		dAtA[i] = 0x1a
	}
	{
		size, err := m.Root.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintCelestia(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	n3, err3 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.Timestamp, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.Timestamp):])
	if err3 != nil {
		return 0, err3
	}
	i -= n3
	i = encodeVarintCelestia(dAtA, i, uint64(n3))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintCelestia(dAtA []byte, offset int, v uint64) int {
	offset -= sovCelestia(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ClientState) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BaseClient != nil {
		l = m.BaseClient.Size()
		n += 1 + l + sovCelestia(uint64(l))
	}
	return n
}

func (m *ConsensusState) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.Timestamp)
	n += 1 + l + sovCelestia(uint64(l))
	l = m.Root.Size()
	n += 1 + l + sovCelestia(uint64(l))
	l = len(m.NextValidatorsHash)
	if l > 0 {
		n += 1 + l + sovCelestia(uint64(l))
	}
	return n
}

func sovCelestia(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozCelestia(x uint64) (n int) {
	return sovCelestia(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ClientState) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCelestia
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ClientState: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ClientState: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BaseClient", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCelestia
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCelestia
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCelestia
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BaseClient == nil {
				m.BaseClient = &_07_tendermint.ClientState{}
			}
			if err := m.BaseClient.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCelestia(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthCelestia
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ConsensusState) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCelestia
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ConsensusState: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ConsensusState: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCelestia
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCelestia
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCelestia
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.Timestamp, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Root", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCelestia
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCelestia
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCelestia
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Root.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NextValidatorsHash", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCelestia
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthCelestia
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthCelestia
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NextValidatorsHash = append(m.NextValidatorsHash[:0], dAtA[iNdEx:postIndex]...)
			if m.NextValidatorsHash == nil {
				m.NextValidatorsHash = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCelestia(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthCelestia
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipCelestia(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowCelestia
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCelestia
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCelestia
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthCelestia
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupCelestia
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthCelestia
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthCelestia        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowCelestia          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupCelestia = fmt.Errorf("proto: unexpected end of group")
)
